/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/progress-bar/progress-bar';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/render/api';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/element';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/linker/view_type';
import * as import11 from '@angular/core/src/change_detection/change_detection';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from './progress-bar.css.shim';
import * as import15 from '@angular/common/src/directives/ng_style';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/element_ref';
class MdProgressBarModuleInjector extends import0.NgModuleInjector<import1.MdProgressBarModule> {
  _CommonModule_0:import2.CommonModule;
  _MdProgressBarModule_1:import1.MdProgressBarModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == (null as any))) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.MdProgressBarModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MdProgressBarModule_1 = new import1.MdProgressBarModule();
    return this._MdProgressBarModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.MdProgressBarModule)) { return this._MdProgressBarModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdProgressBarModuleNgFactory:import0.NgModuleFactory<import1.MdProgressBarModule> = new import0.NgModuleFactory(MdProgressBarModuleInjector,import1.MdProgressBarModule);
var renderType_MdProgressBar_Host:import6.RenderComponentType = (null as any);
class _View_MdProgressBar_Host0 extends import7.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import8.AppElement;
  _MdProgressBar_0_4:import1.MdProgressBar;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_MdProgressBar_Host0,renderType_MdProgressBar_Host,import10.ViewType.HOST,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.selectOrCreateHostElement('md-progress-bar',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'aria-valuemax','100');
    this.renderer.setElementAttribute(this._el_0,'aria-valuemin','0');
    this.renderer.setElementAttribute(this._el_0,'role','progressbar');
    this._appEl_0 = new import8.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MdProgressBar0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MdProgressBar_0_4 = new import1.MdProgressBar();
    this._appEl_0.initComponent(this._MdProgressBar_0_4,[],compView_0);
    compView_0.create(this._MdProgressBar_0_4,this.projectableNodes,(null as any));
    this._expr_0 = import11.UNINITIALIZED;
    this._expr_1 = import11.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdProgressBar) && (0 === requestNodeIndex))) { return this._MdProgressBar_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._MdProgressBar_0_4.value;
    if (import9.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuenow',((currVal_0 == (null as any))? (null as any): currVal_0.toString()));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._MdProgressBar_0_4.mode;
    if (import9.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementAttribute(this._el_0,'mode',((currVal_1 == (null as any))? (null as any): currVal_1.toString()));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_MdProgressBar_Host0(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  if ((renderType_MdProgressBar_Host === (null as any))) { (renderType_MdProgressBar_Host = viewUtils.createRenderComponentType('',0,import12.ViewEncapsulation.None,[],{})); }
  return new _View_MdProgressBar_Host0(viewUtils,parentInjector,declarationEl);
}
export const MdProgressBarNgFactory:import13.ComponentFactory<import1.MdProgressBar> = new import13.ComponentFactory<import1.MdProgressBar>('md-progress-bar',viewFactory_MdProgressBar_Host0,import1.MdProgressBar);
const styles_MdProgressBar:any[] = [import14.styles];
var renderType_MdProgressBar:import6.RenderComponentType = (null as any);
class _View_MdProgressBar0 extends import7.AppView<import1.MdProgressBar> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _NgStyle_3_3:import15.NgStyle;
  _text_4:any;
  _el_5:any;
  _NgStyle_5_3:import15.NgStyle;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_MdProgressBar0,renderType_MdProgressBar,import10.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import8.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','md-progress-bar-background');
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_3 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','md-progress-bar-buffer');
    this._NgStyle_3_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers),new import17.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_5 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','md-progress-bar-primary md-progress-bar-fill');
    this._NgStyle_5_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers),new import17.ElementRef(this._el_5),this.renderer);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_7 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_7,'class','md-progress-bar-secondary md-progress-bar-fill');
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_0 = import11.UNINITIALIZED;
    this._expr_1 = import11.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgStyle) && (3 === requestNodeIndex))) { return this._NgStyle_3_3; }
    if (((token === import15.NgStyle) && (5 === requestNodeIndex))) { return this._NgStyle_5_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context._bufferTransform();
    if (import9.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgStyle_3_3.ngStyle = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (!throwOnChange) { this._NgStyle_3_3.ngDoCheck(); }
    const currVal_1:any = this.context._primaryTransform();
    if (import9.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgStyle_5_3.ngStyle = currVal_1;
      this._expr_1 = currVal_1;
    }
    if (!throwOnChange) { this._NgStyle_5_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_MdProgressBar0(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<import1.MdProgressBar> {
  if ((renderType_MdProgressBar === (null as any))) { (renderType_MdProgressBar = viewUtils.createRenderComponentType('',0,import12.ViewEncapsulation.Emulated,styles_MdProgressBar,{})); }
  return new _View_MdProgressBar0(viewUtils,parentInjector,declarationEl);
}