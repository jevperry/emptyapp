/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/slide-toggle/slide-toggle';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/form_providers';
import * as import4 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/render/api';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/element';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/linker/view_type';
import * as import11 from '@angular/core/src/change_detection/change_detection';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/forms/src/directives/control_value_accessor';
import * as import14 from '@angular/core/src/metadata/view';
import * as import15 from '@angular/core/src/linker/component_factory';
import * as import16 from './slide-toggle.css.shim';
class MdSlideToggleModuleInjector extends import0.NgModuleInjector<import1.MdSlideToggleModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _FormsModule_1:import3.FormsModule;
  _MdSlideToggleModule_2:import1.MdSlideToggleModule;
  __RadioControlRegistry_3:import4.RadioControlRegistry;
  constructor(parent:import5.Injector) {
    super(parent,[],[]);
  }
  get _RadioControlRegistry_3():import4.RadioControlRegistry {
    if ((this.__RadioControlRegistry_3 == (null as any))) { (this.__RadioControlRegistry_3 = new import4.RadioControlRegistry()); }
    return this.__RadioControlRegistry_3;
  }
  createInternal():import1.MdSlideToggleModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._FormsModule_1 = new import3.FormsModule();
    this._MdSlideToggleModule_2 = new import1.MdSlideToggleModule();
    return this._MdSlideToggleModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import3.FormsModule)) { return this._FormsModule_1; }
    if ((token === import1.MdSlideToggleModule)) { return this._MdSlideToggleModule_2; }
    if ((token === import4.RadioControlRegistry)) { return this._RadioControlRegistry_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdSlideToggleModuleNgFactory:import0.NgModuleFactory<import1.MdSlideToggleModule> = new import0.NgModuleFactory(MdSlideToggleModuleInjector,import1.MdSlideToggleModule);
var renderType_MdSlideToggle_Host:import6.RenderComponentType = (null as any);
class _View_MdSlideToggle_Host0 extends import7.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import8.AppElement;
  _MdSlideToggle_0_4:import1.MdSlideToggle;
  __NG_VALUE_ACCESSOR_0_5:any[];
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import5.Injector,declarationEl:import8.AppElement) {
    super(_View_MdSlideToggle_Host0,renderType_MdSlideToggle_Host,import10.ViewType.HOST,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_5():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_5 == (null as any))) { (this.__NG_VALUE_ACCESSOR_0_5 = [this._MdSlideToggle_0_4]); }
    return this.__NG_VALUE_ACCESSOR_0_5;
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.selectOrCreateHostElement('md-slide-toggle',rootSelector,(null as any));
    this._appEl_0 = new import8.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MdSlideToggle0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MdSlideToggle_0_4 = new import1.MdSlideToggle(new import12.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._MdSlideToggle_0_4,[],compView_0);
    compView_0.create(this._MdSlideToggle_0_4,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'mousedown',this.eventHandler(this._handle_mousedown_0_0.bind(this)));
    this._expr_1 = import11.UNINITIALIZED;
    this._expr_2 = import11.UNINITIALIZED;
    this._expr_3 = import11.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[disposable_0],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSlideToggle) && (0 === requestNodeIndex))) { return this._MdSlideToggle_0_4; }
    if (((token === import13.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._MdSlideToggle_0_4.ngAfterContentInit(); } }
    const currVal_1:any = this._MdSlideToggle_0_4.checked;
    if (import9.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'md-checked',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this._MdSlideToggle_0_4.disabled;
    if (import9.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_0,'md-disabled',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._MdSlideToggle_0_4._hasFocus;
    if (import9.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementClass(this._el_0,'md-slide-toggle-focused',currVal_3);
      this._expr_3 = currVal_3;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_mousedown_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MdSlideToggle_0_4._setMousedown()) !== false);
    return (true && pd_0);
  }
}
function viewFactory_MdSlideToggle_Host0(viewUtils:import9.ViewUtils,parentInjector:import5.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  if ((renderType_MdSlideToggle_Host === (null as any))) { (renderType_MdSlideToggle_Host = viewUtils.createRenderComponentType('',0,import14.ViewEncapsulation.None,[],{})); }
  return new _View_MdSlideToggle_Host0(viewUtils,parentInjector,declarationEl);
}
export const MdSlideToggleNgFactory:import15.ComponentFactory<import1.MdSlideToggle> = new import15.ComponentFactory<import1.MdSlideToggle>('md-slide-toggle',viewFactory_MdSlideToggle_Host0,import1.MdSlideToggle);
const styles_MdSlideToggle:any[] = [import16.styles];
var renderType_MdSlideToggle:import6.RenderComponentType = (null as any);
class _View_MdSlideToggle0 extends import7.AppView<import1.MdSlideToggle> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _text_21:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import5.Injector,declarationEl:import8.AppElement) {
    super(_View_MdSlideToggle0,renderType_MdSlideToggle,import10.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import8.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'label',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','md-slide-toggle-label');
    this._text_1 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','md-slide-toggle-container');
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'div',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','md-slide-toggle-bar');
    this._text_5 = this.renderer.createText(this._el_2,'\n\n    ',(null as any));
    this._el_6 = this.renderer.createElement(this._el_2,'div',(null as any));
    this.renderer.setElementAttribute(this._el_6,'class','md-slide-toggle-thumb-container');
    this._text_7 = this.renderer.createText(this._el_6,'\n\n      ',(null as any));
    this._el_8 = this.renderer.createElement(this._el_6,'div',(null as any));
    this.renderer.setElementAttribute(this._el_8,'class','md-slide-toggle-thumb');
    this._text_9 = this.renderer.createText(this._el_8,'\n        ',(null as any));
    this._el_10 = this.renderer.createElement(this._el_8,'div',(null as any));
    this.renderer.setElementAttribute(this._el_10,'class','md-ink-ripple');
    this._text_11 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._text_12 = this.renderer.createText(this._el_6,'\n    ',(null as any));
    this._text_13 = this.renderer.createText(this._el_2,'\n\n    ',(null as any));
    this._el_14 = this.renderer.createElement(this._el_2,'input',(null as any));
    this.renderer.setElementAttribute(this._el_14,'class','md-slide-toggle-input md-visually-hidden');
    this.renderer.setElementAttribute(this._el_14,'type','checkbox');
    this._text_15 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_16 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_17 = this.renderer.createElement(this._el_0,'span',(null as any));
    this.renderer.setElementAttribute(this._el_17,'class','md-slide-toggle-content');
    this._text_18 = this.renderer.createText(this._el_17,'\n    ',(null as any));
    this.renderer.projectNodes(this._el_17,import9.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_19 = this.renderer.createText(this._el_17,'\n  ',(null as any));
    this._text_20 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_21 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_6,'slidestart',this.eventHandler(this._handle_slidestart_6_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_6,'slide',this.eventHandler(this._handle_slide_6_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_6,'slideend',this.eventHandler(this._handle_slideend_6_2.bind(this)));
    this._expr_7 = import11.UNINITIALIZED;
    this._expr_8 = import11.UNINITIALIZED;
    this._expr_9 = import11.UNINITIALIZED;
    this._expr_10 = import11.UNINITIALIZED;
    this._expr_11 = import11.UNINITIALIZED;
    this._expr_12 = import11.UNINITIALIZED;
    this._expr_13 = import11.UNINITIALIZED;
    this._expr_14 = import11.UNINITIALIZED;
    var disposable_3:Function = this.renderer.listen(this._el_14,'blur',this.eventHandler(this._handle_blur_14_0.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_14,'focus',this.eventHandler(this._handle_focus_14_1.bind(this)));
    var disposable_5:Function = this.renderer.listen(this._el_14,'change',this.eventHandler(this._handle_change_14_2.bind(this)));
    var disposable_6:Function = this.renderer.listen(this._el_14,'click',this.eventHandler(this._handle_click_14_3.bind(this)));
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._text_21
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6
    ]
    ,[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_7:any = this.context.getInputId();
    if (import9.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementProperty(this._el_14,'id',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context.required;
    if (import9.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementProperty(this._el_14,'required',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context.tabIndex;
    if (import9.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementProperty(this._el_14,'tabIndex',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context.checked;
    if (import9.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementProperty(this._el_14,'checked',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context.disabled;
    if (import9.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementProperty(this._el_14,'disabled',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context.name;
    if (import9.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_14,'name',((currVal_12 == (null as any))? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.context.ariaLabel;
    if (import9.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementAttribute(this._el_14,'aria-label',((currVal_13 == (null as any))? (null as any): currVal_13.toString()));
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.context.ariaLabelledby;
    if (import9.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementAttribute(this._el_14,'aria-labelledby',((currVal_14 == (null as any))? (null as any): currVal_14.toString()));
      this._expr_14 = currVal_14;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_slidestart_6_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onDragStart()) !== false);
    return (true && pd_0);
  }
  private _handle_slide_6_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onDrag($event)) !== false);
    return (true && pd_0);
  }
  private _handle_slideend_6_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onDragEnd()) !== false);
    return (true && pd_0);
  }
  private _handle_blur_14_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onInputBlur()) !== false);
    return (true && pd_0);
  }
  private _handle_focus_14_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onInputFocus()) !== false);
    return (true && pd_0);
  }
  private _handle_change_14_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onChangeEvent($event)) !== false);
    return (true && pd_0);
  }
  private _handle_click_14_3($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context._onInputClick($event)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_MdSlideToggle0(viewUtils:import9.ViewUtils,parentInjector:import5.Injector,declarationEl:import8.AppElement):import7.AppView<import1.MdSlideToggle> {
  if ((renderType_MdSlideToggle === (null as any))) { (renderType_MdSlideToggle = viewUtils.createRenderComponentType('',1,import14.ViewEncapsulation.Emulated,styles_MdSlideToggle,{})); }
  return new _View_MdSlideToggle0(viewUtils,parentInjector,declarationEl);
}