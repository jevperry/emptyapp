/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/list/list';
import * as import2 from '@angular/material/core/line/line';
import * as import3 from '@angular/core/src/di/injector';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/view';
import * as import6 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_utils';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/change_detection';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from './list.css';
import * as import13 from '@angular/core/src/linker/query_list';
import * as import14 from '@angular/core/src/linker/element_ref';
class MdListModuleInjector extends import0.NgModuleInjector<import1.MdListModule> {
  _MdLineModule_0:import2.MdLineModule;
  _MdListModule_1:import1.MdListModule;
  constructor(parent:import3.Injector) {
    super(parent,[],[]);
  }
  createInternal():import1.MdListModule {
    this._MdLineModule_0 = new import2.MdLineModule();
    this._MdListModule_1 = new import1.MdListModule();
    return this._MdListModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.MdLineModule)) { return this._MdLineModule_0; }
    if ((token === import1.MdListModule)) { return this._MdListModule_1; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdListModuleNgFactory:import0.NgModuleFactory<import1.MdListModule> = new import0.NgModuleFactory(MdListModuleInjector,import1.MdListModule);
var renderType_MdList_Host:import4.RenderComponentType = (null as any);
class _View_MdList_Host0 extends import5.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import6.AppElement;
  _MdList_0_4:import1.MdList;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement) {
    super(_View_MdList_Host0,renderType_MdList_Host,import8.ViewType.HOST,viewUtils,parentInjector,declarationEl,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.selectOrCreateHostElement('md-list',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'role','list');
    this._appEl_0 = new import6.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MdList0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MdList_0_4 = new import1.MdList();
    this._appEl_0.initComponent(this._MdList_0_4,[],compView_0);
    compView_0.create(this._MdList_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdList) && (0 === requestNodeIndex))) { return this._MdList_0_4; }
    return notFoundResult;
  }
}
function viewFactory_MdList_Host0(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement):import5.AppView<any> {
  if ((renderType_MdList_Host === (null as any))) { (renderType_MdList_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_MdList_Host0(viewUtils,parentInjector,declarationEl);
}
export const MdListNgFactory:import11.ComponentFactory<import1.MdList> = new import11.ComponentFactory<import1.MdList>('md-list, md-nav-list',viewFactory_MdList_Host0,import1.MdList);
const styles_MdList:any[] = [import12.styles];
var renderType_MdList:import4.RenderComponentType = (null as any);
class _View_MdList0 extends import5.AppView<import1.MdList> {
  constructor(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement) {
    super(_View_MdList0,renderType_MdList,import8.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this.renderer.projectNodes(parentRenderNode,import7.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this.init([],[],[],[]);
    return (null as any);
  }
}
export function viewFactory_MdList0(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement):import5.AppView<import1.MdList> {
  if ((renderType_MdList === (null as any))) { (renderType_MdList = viewUtils.createRenderComponentType('',1,import10.ViewEncapsulation.None,styles_MdList,{})); }
  return new _View_MdList0(viewUtils,parentInjector,declarationEl);
}
var renderType_MdListItem_Host:import4.RenderComponentType = (null as any);
class _View_MdListItem_Host0 extends import5.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import6.AppElement;
  _MdListItem_0_4:import1.MdListItem;
  _query_MdLine_0_0:import13.QueryList<any>;
  _query_MdListAvatar_0_1:import13.QueryList<any>;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement) {
    super(_View_MdListItem_Host0,renderType_MdListItem_Host,import8.ViewType.HOST,viewUtils,parentInjector,declarationEl,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.selectOrCreateHostElement('md-list-item',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'role','listitem');
    this._appEl_0 = new import6.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MdListItem0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MdListItem_0_4 = new import1.MdListItem(this.renderer,new import14.ElementRef(this._el_0));
    this._query_MdLine_0_0 = new import13.QueryList<any>();
    this._query_MdListAvatar_0_1 = new import13.QueryList<any>();
    this._appEl_0.initComponent(this._MdListItem_0_4,[],compView_0);
    this._query_MdListAvatar_0_1.reset([]);
    this._MdListItem_0_4._hasAvatar = this._query_MdListAvatar_0_1.first;
    compView_0.create(this._MdListItem_0_4,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'focus',this.eventHandler(this._handle_focus_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'blur',this.eventHandler(this._handle_blur_0_1.bind(this)));
    this.init([].concat([this._el_0]),[this._el_0],[
      disposable_0,
      disposable_1
    ]
    ,[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdListItem) && (0 === requestNodeIndex))) { return this._MdListItem_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdLine_0_0.dirty) {
        this._query_MdLine_0_0.reset([]);
        this._MdListItem_0_4._lines = this._query_MdLine_0_0;
        this._query_MdLine_0_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._MdListItem_0_4.ngAfterContentInit(); }
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_focus_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MdListItem_0_4._handleFocus()) !== false);
    return (true && pd_0);
  }
  private _handle_blur_0_1($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MdListItem_0_4._handleBlur()) !== false);
    return (true && pd_0);
  }
}
function viewFactory_MdListItem_Host0(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement):import5.AppView<any> {
  if ((renderType_MdListItem_Host === (null as any))) { (renderType_MdListItem_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_MdListItem_Host0(viewUtils,parentInjector,declarationEl);
}
export const MdListItemNgFactory:import11.ComponentFactory<import1.MdListItem> = new import11.ComponentFactory<import1.MdListItem>('md-list-item, a[md-list-item]',viewFactory_MdListItem_Host0,import1.MdListItem);
const styles_MdListItem:any[] = [];
var renderType_MdListItem:import4.RenderComponentType = (null as any);
class _View_MdListItem0 extends import5.AppView<import1.MdListItem> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement) {
    super(_View_MdListItem0,renderType_MdListItem,import8.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','md-list-item');
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this.renderer.projectNodes(this._el_0,import7.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_2 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_3 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','md-list-text');
    this.renderer.projectNodes(this._el_3,import7.flattenNestedViewRenderNodes(this.projectableNodes[1]));
    this._text_4 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this.renderer.projectNodes(this._el_0,import7.flattenNestedViewRenderNodes(this.projectableNodes[2]));
    this._text_5 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_0 = import9.UNINITIALIZED;
    this.init([],[
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6
    ]
    ,[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this.context._hasFocus;
    if (import7.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'md-list-item-focus',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_MdListItem0(viewUtils:import7.ViewUtils,parentInjector:import3.Injector,declarationEl:import6.AppElement):import5.AppView<import1.MdListItem> {
  if ((renderType_MdListItem === (null as any))) { (renderType_MdListItem = viewUtils.createRenderComponentType('',3,import10.ViewEncapsulation.None,styles_MdListItem,{})); }
  return new _View_MdListItem0(viewUtils,parentInjector,declarationEl);
}